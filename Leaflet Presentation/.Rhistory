#American Samoa
case<-case[case$Province_State!="American Samoa",]
#Guam
case$FIPS[case$Province_State=="Guam"]<-66010
case[nchar(case$FIPS)==2,]
#Northern Mariana Islands
case$Province_State[case$Province_State=="Northern Mariana Islands"]<-"Northern Islands"
case[nchar(case$FIPS)==2,]
case$FIPS[case$Province_State="Northern Islans"]<-69085
case$FIPS[case$Province_State=="Northern Islans"]<-69085
case[nchar(case$FIPS)==2,]
case$FIPS[case$Province_State=="Northern Islands"]<-69085
case[nchar(case$FIPS)==2,]
case<-case[case$Province_State!="Virgin Islands",]
case[nchar(case$FIPS)==2,]
case$FIPS[1]
paste("0",case$FIPS[1],sep="")
case$FIPS<-ifelse(nchar(case$FIPS)==4,paste("0",case$FIPS,sep=""),case$FIPS)
table
table(duplicated(case$FIPS))
is.element(case$FIPS,county_FIPS$FIPS)
table(is.element(case$FIPS,county_FIPS$FIPS))
case[!is.element(case$FIPS,county_FIPS$FIPS),]
case<-case[is.element(case$FIPS,county_FIPS$FIPS),]
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
#import the shapefile
county.shape<-readOGR("/Users/mahaoxi/Desktop/h/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#Manipulate dataset
case<-raw_case %>% select(c(5,6,7,(ncol(raw_case)-1),ncol(raw_case))) %>% na.omit()
case$daily.newcase<-case[,5]-case[,4]
case$Province_State<-as.character(case$Province_State)
case[nchar(case$FIPS)==2,]
#American Samoa and Virgin Islands
case<-case[case$Province_State!="American Samoa",]
case<-case[case$Province_State!="Virgin Islands",]
#Guam
case$FIPS[case$Province_State=="Guam"]<-66010
#Northern Mariana Islands
case$Province_State[case$Province_State=="Northern Mariana Islands"]<-"Northern Islands"
case$FIPS[case$Province_State=="Northern Islands"]<-69085
case$FIPS<-ifelse(nchar(case$FIPS)==4,paste("0",case$FIPS,sep=""),case$FIPS)
#Align
table(is.element(case$FIPS,county_FIPS$FIPS))
case[is.element(case$FIPS,county_FIPS$FIPS),]
case[!is.element(case$FIPS,county_FIPS$FIPS),]
county_FIPS[!is.element(county_FIPS$FIPS,case$FIPS),]
case<-case[is.element(case$FIPS,county_FIPS$FIPS),]
is.element(county_FIPS$FIPS,case$FIPS)
table(is.element(county_FIPS$FIPS,case$FIPS))
county.shape<-subset(county.shape,is.element(county_FIPS$FIPS,case$FIPS))
length(county.shape$STATEFP)
paste(county.shape$STATEFP,county.shape$COUNTYFP,sep="")
orders_FIPS<-paste(county.shape$STATEFP,county.shape$COUNTYFP,sep="")
final_data<-case[order(match(case$FIPS,orders_FIPS)),]
View(final_data)
View(raw_death)
table(duplicated(raw_death$FIPS))
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
#import the shapefile
county.shape<-readOGR("/Users/mahaoxi/Desktop/h/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#Manipulate dataset
case<-raw_case %>% select(c(5,6,7,(ncol(raw_case)-1),ncol(raw_case))) %>% na.omit()
death<-raw_death %>% select(c(5,6,7,(ncol(raw_death)-1),ncol(raw_death))) %>% na.omit()
View(death)
case$daily.newdeath<-death[,5]-death[,4]
View(case)
View(raw_death)
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
#import the shapefile
county.shape<-readOGR("/Users/mahaoxi/Desktop/h/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#Manipulate dataset
case<-raw_case %>% select(c(5,6,7,(ncol(raw_case)-1),ncol(raw_case)))
death<-raw_death %>% select(c(5,6,7,(ncol(raw_death)-1),ncol(raw_death)))
case$daily.newcase<-case[,5]-case[,4]
case$daily.newdeath<-death[,5]-death[,4]
View(case)
case$Province_State<-as.character(case$Province_State)
case[nchar(case$FIPS)==2,]
case<-na.omit(case)
case[nchar(case$FIPS)==2,]
#American Samoa and Virgin Islands
case<-case[case$Province_State!="American Samoa",]
case[nchar(case$FIPS)==2,]
case<-case[case$Province_State!="Virgin Islands",]
case[nchar(case$FIPS)==2,]
case$FIPS[case$Province_State=="Guam"]<-66010
#Northern Mariana Islands
case$Province_State[case$Province_State=="Northern Mariana Islands"]<-"Northern Islands"
case$FIPS[case$Province_State=="Northern Islands"]<-69085
case$FIPS<-ifelse(nchar(case$FIPS)==4,paste("0",case$FIPS,sep=""),case$FIPS)
table(is.element(case$FIPS,county_FIPS$FIPS))
case[!is.element(case$FIPS,county_FIPS$FIPS),]
county_FIPS[!is.element(county_FIPS$FIPS,case$FIPS),]
case<-case[is.element(case$FIPS,county_FIPS$FIPS),]
county.shape<-subset(county.shape,is.element(county_FIPS$FIPS,case$FIPS))
orders_FIPS<-paste(county.shape$STATEFP,county.shape$COUNTYFP,sep="")
final_data<-case[order(match(case$FIPS,orders_FIPS)),]
View(final_data)
summary(final_data$daily.newcase)
summary(final_data$daily.newdeath)
bins<-c(0,10,100,500,1500,3000,5000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,7000),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 1,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,Inf),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 1,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 1,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("blue",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 1,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("Accent",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 1,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("viridis",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("magma",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("inferno",domain = c(0,1),bins = bins)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,1),bins = bins,reverse = T)
Dmap<-leaflet() %>% setView(-96,37.8,4) %>%
addProviderTiles(provider = providers$Stamen.Toner) %>%
addPolygons(data = county.shape,
weight = 0.5,
color = "white",
fillOpacity = 0.5,
fillColor = pal(final_data$daily.newcase),
#label = lapply(cm_labels,HTML),
highlightOptions = highlightOptions(
weight = 5,
color = "#666666",
fillOpacity = 0.7,
bringToFront = TRUE
)) %>%
addLegend(pal=pal,
values = final_data$daily.newcase,
opacity = 0.7,
position = "topright")
Dmap
shiny::runApp('Leaflet-covid')
getwd()
library(shiny)
library(dplyr)
library(tidyr)
library(RCurl)
library(rgdal)
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
#cases
Case<-raw_case %>% select(-c(1:11)) %>% na.omit()
total.case<-apply(Case,2,sum)
#death
death<-raw_death %>% select(-c(1:12)) %>% na.omit()
total.death<-apply(death,2,sum)
#time
time_seq<-seq(as.Date("2020-1-22"),by="day",length.out=ncol(Case))
#create dataframe
Bplot_dataset<-data.frame(time_seq,total.case,total.death)
names(Bplot_dataset)<-c("Date","case","death")
#new confirmed
Bplot_dataset$case<-Bplot_dataset$case-lag(Bplot_dataset$case)
Bplot_dataset$death<-Bplot_dataset$death-lag(Bplot_dataset$death)
n<-nrow(Bplot_dataset)
Bplot_dataset<-Bplot_dataset[c((n-59):n),]
View(Bplot_dataset)
#import the dataset
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
###Generate the data for barplot(time vs total case and total death)
#cases
Case<-raw_case %>% select(-c(1:11)) %>% na.omit()
total.case<-apply(Case,2,sum)
#death
death<-raw_death %>% select(-c(1:12)) %>% na.omit()
total.death<-apply(death,2,sum)
#time
time_seq<-seq(as.Date("2020-1-22"),by="day",length.out=ncol(Case))
#create dataframe
Bplot_dataset<-data.frame(time_seq,total.case,total.death)
names(Bplot_dataset)<-c("Date","case","death")
#new confirmed
Bplot_dataset$case<-Bplot_dataset$case-lag(Bplot_dataset$case)
Bplot_dataset$death<-Bplot_dataset$death-lag(Bplot_dataset$death)
n<-nrow(Bplot_dataset)
Bplot_dataset<-Bplot_dataset[c((n-59):n),]
###Leaflet plot
#import the shapefile
county.shape<-readOGR("/Users/mahaoxi/Desktop/h/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#Manipulate dataset
case<-raw_case %>% select(c(5,6,7,(ncol(raw_case)-1),ncol(raw_case)))
death<-raw_death %>% select(c(5,6,7,(ncol(raw_death)-1),ncol(raw_death)))
case$daily.newcase<-case[,5]-case[,4]
case$daily.newdeath<-death[,5]-death[,4]
case<-na.omit(case)
case$Province_State<-as.character(case$Province_State)
case[nchar(case$FIPS)==2,]
#American Samoa and Virgin Islands
case<-case[case$Province_State!="American Samoa",]
case<-case[case$Province_State!="Virgin Islands",]
#Guam
case$FIPS[case$Province_State=="Guam"]<-66010
#Northern Mariana Islands
case$Province_State[case$Province_State=="Northern Mariana Islands"]<-"Northern Islands"
case$FIPS[case$Province_State=="Northern Islands"]<-69085
case$FIPS<-ifelse(nchar(case$FIPS)==4,paste("0",case$FIPS,sep=""),case$FIPS)
#Align
table(is.element(case$FIPS,county_FIPS$FIPS))
case[!is.element(case$FIPS,county_FIPS$FIPS),]
county_FIPS[!is.element(county_FIPS$FIPS,case$FIPS),]
case<-case[is.element(case$FIPS,county_FIPS$FIPS),]
county.shape<-subset(county.shape,is.element(county_FIPS$FIPS,case$FIPS))
orders_FIPS<-paste(county.shape$STATEFP,county.shape$COUNTYFP,sep="")
final_data<-case[order(match(case$FIPS,orders_FIPS)),]
#color pallet
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,1),bins = bins,reverse = T)
county.shape<-readOGR("/Users/mahaoxi/Desktop/Project/R shiny/Covid-19/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#import the dataset
case.data <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
raw_case <- read.csv(text = case.data,header=T)
death.data<-getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
raw_death<-read.csv(text=death.data,header=T)
###Generate the data for barplot(time vs total case and total death)
#cases
Case<-raw_case %>% select(-c(1:11)) %>% na.omit()
total.case<-apply(Case,2,sum)
#death
death<-raw_death %>% select(-c(1:12)) %>% na.omit()
total.death<-apply(death,2,sum)
#time
time_seq<-seq(as.Date("2020-1-22"),by="day",length.out=ncol(Case))
#create dataframe
Bplot_dataset<-data.frame(time_seq,total.case,total.death)
names(Bplot_dataset)<-c("Date","case","death")
#new confirmed
Bplot_dataset$case<-Bplot_dataset$case-lag(Bplot_dataset$case)
Bplot_dataset$death<-Bplot_dataset$death-lag(Bplot_dataset$death)
n<-nrow(Bplot_dataset)
Bplot_dataset<-Bplot_dataset[c((n-59):n),]
###Leaflet plot
#import the shapefile
county.shape<-readOGR("/Users/mahaoxi/Desktop/Project/R shiny/Covid-19/cb_2018_us_county_500k/cb_2018_us_county_500k.shp")
county_FIPS<-data.frame(SFP = county.shape$STATEFP,CFP = county.shape$COUNTYFP, C=county.shape$NAME)
county_FIPS<-county_FIPS %>% unite(FIPS,c("SFP","CFP"),sep="")
#Manipulate dataset
case<-raw_case %>% select(c(5,6,7,(ncol(raw_case)-1),ncol(raw_case)))
death<-raw_death %>% select(c(5,6,7,(ncol(raw_death)-1),ncol(raw_death)))
case$daily.newcase<-case[,5]-case[,4]
case$daily.newdeath<-death[,5]-death[,4]
case<-na.omit(case)
case$Province_State<-as.character(case$Province_State)
case[nchar(case$FIPS)==2,]
#American Samoa and Virgin Islands
case<-case[case$Province_State!="American Samoa",]
case<-case[case$Province_State!="Virgin Islands",]
#Guam
case$FIPS[case$Province_State=="Guam"]<-66010
#Northern Mariana Islands
case$Province_State[case$Province_State=="Northern Mariana Islands"]<-"Northern Islands"
case$FIPS[case$Province_State=="Northern Islands"]<-69085
case$FIPS<-ifelse(nchar(case$FIPS)==4,paste("0",case$FIPS,sep=""),case$FIPS)
#Align
table(is.element(case$FIPS,county_FIPS$FIPS))
case[!is.element(case$FIPS,county_FIPS$FIPS),]
county_FIPS[!is.element(county_FIPS$FIPS,case$FIPS),]
case<-case[is.element(case$FIPS,county_FIPS$FIPS),]
county.shape<-subset(county.shape,is.element(county_FIPS$FIPS,case$FIPS))
orders_FIPS<-paste(county.shape$STATEFP,county.shape$COUNTYFP,sep="")
final_data<-case[order(match(case$FIPS,orders_FIPS)),]
#color pallet
bins<-c(0,10,50,100,500,1500,3000,Inf)
pal<-colorBin("RdYlBu",domain = c(0,1),bins = bins,reverse = T)
library(leaflet)
View(Bplot_dataset)
View(final_data)
library(htmltools)
library(shinydashboard)
library(htmltools)
library(shinydashboard)
final_data
View(final_data)
runApp('Leaflet-covid')
runApp('~/Desktop/Project/R shiny/Covid-19')
runApp('~/Desktop/Project/R shiny/Covid-19')
View(final_data)
runApp('~/Desktop/Project/R shiny/Covid-19')
View(Bplot_dataset)
names(final_data)
names(final_data)[c(6,7)]
runApp('~/Desktop/Project/R shiny/Covid-19')
gg_class<-ggplot(Bplot_dataset,aes_string(x="Date",y=input$class))+
geom_bar(stat = "identity",fill="white",colour="darkblue")
gg_class<-ggplot(Bplot_dataset,aes_string(x="Date",y="case"))+
geom_bar(stat = "identity",fill="white",colour="darkblue")
gg_class
runApp('~/Desktop/Project/R shiny/Covid-19')
runApp('~/Desktop/Project/R shiny/Covid-19')
runApp('~/Desktop/Project/R shiny/Covid-19')
